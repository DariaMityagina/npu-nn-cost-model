// Copyright © 2023 Intel Corporation
// SPDX-License-Identifier: Apache 2.0
// LEGAL NOTICE: Your use of this software and any required dependent software (the “Software Package”)
// is subject to the terms and conditions of the software license agreements for the Software Package,
// which may also include notices, disclaimers, or license terms for third party or open source software
// included in or with the Software Package, and your use indicates your acceptance of all such terms.
// Please refer to the “third-party-programs.txt” or other similarly-named text file included with the
// Software Package for additional details.

#include <gtest/gtest.h>
#include "vpu_cost_model.h"

#define KERNEL_NAME @KERNEL_NAME@
#define TEST_NAME @TEST_NAME@


static auto model = VPUNN::VPUCostModel();

TEST(TEST_NAME, BasicAssertions) {
    auto input_tensor = VPUNN::VPUTensor(56, 56, 16, 1, VPUNN::DataType::FLOAT16);
    auto output_tensor = VPUNN::VPUTensor(56, 56, 16, 1, VPUNN::DataType::FLOAT16);

    auto swwl = VPUNN::KERNEL_NAME(VPUNN::VPUDevice::VPU_2_7, input_tensor, output_tensor);

    // Cycles
    auto cycles = model.SHAVE(swwl);
    // Theoretical cycles
    auto theoretical_cycles =
            static_cast<unsigned int>(round(float(output_tensor.size() / swwl.getKernelEfficiency()))) +
            swwl.getLatency();
    // Expect equality.
    EXPECT_EQ(cycles, theoretical_cycles);
}

#undef KERNEL_NAME
#undef TEST_NAME
